{"version":3,"sources":["pictures/freelance.png","pictures/stavecoffee.png","pictures/daniel.png","pictures/danielwithbridge.jpg","pictures/designboard.jpeg","Thumbnail.js","Freelance.js","Projects.js","Resume.js","About.js","StaveCoffee.js","DesignBoard.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Thumbnail","props","className","to","link","src","image","alt","title","category","freelanceImg","require","Freelance","href","staveCoffeeImg","Projects","Resume","danielWithBridgeImg","About","StaveCoffee","designBoardImg","DesignBoard","App","exact","path","component","logo","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.581797bc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/freelance.d3f6c20e.png\";","module.exports = __webpack_public_path__ + \"static/media/stavecoffee.c984493f.png\";","module.exports = __webpack_public_path__ + \"static/media/daniel.0e018262.png\";","module.exports = __webpack_public_path__ + \"static/media/danielwithbridge.b63ac3f9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/designboard.34a10d77.jpeg\";","import React from 'react'; \nimport {Link} from 'react-router-dom'; \nimport './App.css';\n \nfunction Thumbnail(props) {\n  return (\n    <div className='project-thumbnail'>\n      <Link to={props.link}>\n        <div className='project-image'>\n          <img src={props.image} alt=\"Project Image\"/>\n        </div>\n        <div className='overlay'>\n            <div className=\"project-title\">{props.title}</div>\n            <div className=\"project-category\">{props.category}</div>\n        </div>\n      </Link>\n    </div>\n  );\n}\n \nexport default Thumbnail;","import React from \"react\"\nimport './App.css';\nconst freelanceImg = require('./pictures/freelance.png')\n\n \nfunction Freelance(props) {\n  return (\n    <div className='component container'>\n      <h1>Freelance CRM</h1>\n      <a href='https://github.com/93dannyp/freelance-frontend'>Front End Repo</a><br/>\n      <a href='https://github.com/93dannyp/freelance-backend'>Back End Repo</a><br/>\n      <a href='https://freelancecrm.herokuapp.com/'>Visit The Website</a>\n      <p>Freelance CRM is a Web Application inspired by the need for a simple CRM for Freelancers.</p>\n      <img src={freelanceImg}/>\n      <h3>About this Project</h3>\n      <p>Of all Daniel's projects, this idea probably has the highest potenital for user scalability. There are so many expensive, overly-complex CRM's out there that just don't fit the freelancer's needs. Freelance CRM was designed with simple management in mind so that managing customer information isn't another tedious job responsibility.</p>\n      <p>This Web App uses RESTful routing with full CRUD functionality. The front end was built with React.js. The backend was built with SQLite database, Sequelize ORM, Node.js, and Express </p>\n      <p>The styling was implemented using Styled-Components.</p>\n    </div>\n  )\n}\n\nexport default Freelance;\n","import React from \"react\"\nimport Thumbnail from './Thumbnail.js'; \nimport { BrowserRouter, Route, Link } from 'react-router-dom'; \nimport Freelance from './Freelance'\nimport './App.css';\n \nconst freelanceImg = require('./pictures/freelance.png')\nconst staveCoffeeImg = require('./pictures/stavecoffee.png')\n\nfunction Projects(props) {\n  return (\n    <div className='component'>\n      <h1>Projects</h1>\n      <div className='project-container'>\n        <Thumbnail\n            link=\"/freelance\"\n            image={freelanceImg}\n            title=\"Freelance CRM\"\n            category=\"Web App\"\n        />\n        <Thumbnail\n            link=\"/stavecoffee\"\n            image={staveCoffeeImg}\n            title=\"Stave Coffee Blog\"\n            category=\"Website\"\n        />\n        <Thumbnail\n            link=\"/designboard\"\n            image='https://images.unsplash.com/photo-1598503246983-ba36570c17e4?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1050&q=80'\n            title=\"Design Board\"\n            category=\"Website\"\n        />\n      </div>\n    </div>\n  )\n}\n \nexport default Projects;\n","import React from \"react\"\nimport './App.css';\n\n \nfunction Resume(props) {\n  return (\n    <div className='component container'>\n      <h1>Resume</h1>\n      <h3>Skills</h3>\n      <h5>Languages and Frameworks</h5>\n      <p>JavaScript, jQuery, HTML, CSS, Bootstrap, Node.js, Express, AJAX, Mongoose, Python, Flask</p>\n      <h5>Management and Deployment</h5>\n      <p>VS Code, X Code, Command Line Interface, GitHub, Heroku, AWS</p>\n      <h5>Databases</h5>\n      <p>SQL, MongoDB</p>\n      <h5>Methodologies</h5>\n      <p>Object Oriented Programming, MVC Pattern, Responsive Design, Authentication, Test-Driven Development, User Stories, Wireframing, Agile Development/Scrum, APIs, Technical Document Reference</p>\n      <h3>Projects Deployed</h3>\n      <h5>Freelance CRM</h5>\n      <p>Built a CRM dashboard for freelancers with RESTful routing practices and full CRUD functionality using Node.js, SQL, Sequelize, and React.</p>\n      <h5>Stave Coffee Shop and Blog</h5>\n      <p>Launched a small business website and blog with RESTful routing practices and full CRUD functionality on Heroku using Node.js, Mongoose, and Mongodb.</p>\n      <h5>Design Board</h5>\n      <p>Built an interior design app with HTML, CSS, and jQuery that fetches information from an Amazon Products API to compare items side-by-side for cohesive interior design. </p>\n      <h3>Relevant Experience</h3>\n      <h5>Software Engineering Student at General Assembly\t</h5>\n      <p>12 week, 500+ hour software engineering program focused on front end web development with a team-oriented, hands-on approach. \n      </p>\n      <p>Built a project portfolio with top to bottom functionality and designed for ease of maintenance and improvement.</p>\n      <h5>Project Manager at Mason Construction, LLC </h5>\n      <p>Managed and completed roughly $10 MM in construction projects per year. </p>\n      <p>Implemented Buildertrend construction management software company-wide and among subcontractors. Buildertrend is the central hub for all information pertaining to ongoing and past projects.</p>\n      <p>Streamlined production systems resulting in a decrease of 25% lead time and increasing production by 60%. Brought organized, objective-based planning to daily operations. Used basic supply chain principals such as labor demand planning and just-in-time deliveries.</p>\n      <p>Built customer relations and trust by administering our home warranty service.</p>\n      <p>Estimated, procured, and coordinated delivery for job site materials.</p>\n      <h5>Project Engineer at Messer Construction </h5>\n      <p>Worked on a team of engineers and managers to build the Cargill Natural Sciences Building at Berea College in Kentucky.</p>\n      <p>Collaborated with key subcontractors ensuring reliability and quality of work, maintained critical project documents, and obtained LEED certification for the project.</p>\n      <h3>Education</h3>\n      <h5>General Assembly Software Engineering</h5>\n      <p>May 2020 â€“ August 2020</p>\n      <h5>University of Kentucky Bachelor of Science, Civil Engineering</h5>\n      <p>Class of 2016</p>\n    </div>\n  )\n}\n \nexport default Resume;\n","import React from \"react\"\nimport './App.css';\n\nconst danielWithBridgeImg = require('./pictures/danielwithbridge.jpg')\n\n \nfunction About(props) {\n  return (\n    <div className='component container'>\n      <h1>About</h1>\n      <p>Daniel is a Software Engineer in Saint Louis, MO.</p>\n      <img src={danielWithBridgeImg}></img>\n      <p>Daniel is an avid runner and has completed five marathons including one ultramarathon.</p>\n      <p>When Daniel isn't running or writing code you can find him reading a good book, listening to music or a podcast, or cheering on the Kentucky Wildcats in Basketball and Football.</p>\n      <h3>Connect with Danny</h3>\n      <a href='https://github.com/danielperkinsii'>GitHub</a><br/>\n      <a href='https://twitter.com/danielperkinsii'>Twitter</a><br/>\n      <a href='https://www.linkedin.com/in/daniel-perkins-b477871a7/'>LinkedIn</a>\n      \n      \n    </div>\n  )\n}\n \nexport default About;\n","import React from \"react\"\nimport './App.css';\n\nconst staveCoffeeImg = require('./pictures/stavecoffee.png')\n \nfunction StaveCoffee(props) {\n  return (\n    <div className='component container'>\n      <h1>Stave Coffee Blog</h1>\n      <a href='https://github.com/93dannyp/stavecoffee'>Visit The Repo</a><br/>\n      <a href='https://stavecoffee.herokuapp.com/'>Visit The Website</a>\n      <p>Stave Coffee Blog is a business website with an integrated blog feature</p>\n      <img src={staveCoffeeImg}/>\n      <h3>About this Project</h3>\n      <p>Stave Coffee Blog is a website based off of the business founded by brothers Jordan Loucks and John Loucks.</p>\n      <p>This website implements RESTful routing with full CRUD functionality. The app has a MVC structure and uses Mongoose, Node.js, Express, EJS, HTML, CSS. </p>\n      <p>The blog is the section of the app with full CRUD functionality. This page is restricted to users with accounts only. You must sign up and then log in to view this page. This is where the user would post a blog about any topic they want (hopefully Stave Coffee related). This page lets the user edit or delete blog posts that only belong to them.</p>\n    </div>\n  )\n}\n\nexport default StaveCoffee;\n","import React from \"react\"\nimport './App.css';\n\nconst designBoardImg = require('./pictures/designboard.jpeg')\n\n \nfunction DesignBoard(props) {\n  return (\n    <div className='component container'>\n      <div className='project-thumbnail'>\n        <h1>Design Board</h1>\n        <a href='https://github.com/93dannyp/93dannyp.github.io'>Visit the Repo</a><br/>\n        <p>Design Board is an interior design web app that lets you visualize home decore and furnature selections from amazon.com.</p>\n        <img src={designBoardImg}/>\n        <p>This app was built with the 'Amazon Products' API. This API was built by user ZombieBest on RapidAPI.com and can be found on RapidAPI.com. The front end was built with jQuery, HTML, and CSS.</p>\n      </div>\n    </div>\n  )\n}\n \nexport default DesignBoard;\n","import React from 'react';\nimport logo from './pictures/daniel.png';\nimport { BrowserRouter, Route, Link } from 'react-router-dom'; \nimport Projects from './Projects.js'; \nimport Resume from './Resume.js'; \nimport About from './About.js'; \nimport Freelance from './Freelance'\nimport './App.css';\nimport StaveCoffee from './StaveCoffee';\nimport DesignBoard from './DesignBoard';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n\n        <Route exact path='/' component={Projects} />\n        <Route exact path='/resume' component={Resume} />\n        <Route exact path='/about' component={About} />\n        <Route exact path='/freelance' component={Freelance} />\n        <Route exact path='/stavecoffee' component={StaveCoffee} />\n        <Route exact path='/designboard' component={DesignBoard} />\n\n\n        <div className='nav'>\n          <img src={logo} className=\"logo\" alt=\"Logo Image\" />\n          <div className=\"nav-links\">\n\n            <Link to='/' className=\"item\">Projects</Link>\n            <Link to='/resume' className=\"item\">Resume</Link>\n            <Link to='/about' className=\"item\">About</Link>\n          </div>\n        </div>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}